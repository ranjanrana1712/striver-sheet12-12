#include<bits/stdc++.h>
using namespace std;
void buble_Sort(int arr[], int n){
    //
    for(int i = n- 1;i>=0;i--){
        for(int j=0;j<=i- 1;j++){
            if(arr[j]>arr[j+1]){
                int temp=arr[j+ 1];
                arr[j+ 1] = arr[j];
                arr[j] = temp;
            }
        }
    }
    
}

int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) cin>>arr[i];
    buble_Sort(arr,n);
    for(int i =0;i<n;i++){
        cout<<arr[i]<<" ";
    }
    return 0;
}
time complexity for ac and wc is 0(n^2)

******************optimized code*****************

#include<bits/stdc++.h>
using namespace std;
//int didSwap == 0;
void buble_Sort(int arr[], int n){
    //
    for(int i = n - 1;i>=0;i--){
        int didSwap = 0;
        for(int j=0;j<=i- 1;j++){
            if(arr[j]>arr[j+1]){
                int temp=arr[j+ 1];
                arr[j+ 1] = arr[j];
                arr[j] = temp;
                didSwap = 1;
            }
        }
        if(didSwap == 0){
                break;
        }
        cout<<"run\n";
    }
    
}

int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) cin>>arr[i];
    buble_Sort(arr,n);
    for(int i =0;i<n;i++){
        cout<<arr[i]<<" ";
    }
    return 0;
}



time complexity is linear time complexity 0(n). If the array is sorted in ascending order 
