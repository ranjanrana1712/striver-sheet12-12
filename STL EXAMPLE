

#include<bits/stdc++.h>
using namespace std;
 
 void explainVector(){
     vector<int> v;
     v.push_back(1);
     v.emplace_back(2);
     
     //using pair in vector
     vector<pair<int,int>>vect;
     v.push_back({1,2});
     v.emplace_back(1,2);
     //5 is the size and 10 instance
     //{10,10,10,10,10}
     vector<int>v(5,10);
     
     vector<int>v(5);
     
     vector<int>v1(5,10);
     
     //to copy the content of v1 into v2
     vector<int> v2(v1);
     
     //---------------------------iterators------------------------------------------
     // iterators are use to access the address of an element 
     //syntax
     vector<int>::iterator it = v.begin();
     //
     it++;
     // it is use to display the element 
     cout<< *(it);
     
     // increasing the address of it by 
     
     it = it + 2;
     cout<<*(it)<<" ";
     //points to a memory address of after last emlement 
     vector<int>::iterator it = v.end();
     // point to a memory address before firt element
     //reverse end
     vector<int>::iterator it = v.rend();
     //it is like  a reverse iterator
     vector<int>::iterator it = v.rbegin();
    
    //---------------------------printing vectors------------------------------------------
     //  using for loop
     
     for(vector<int>::iterator it = v.begin();it != v.end();it++){
         cout<<*(it)<<" ";
     }
     
     //using auto,auto keyword assigns the datatype automatically 
     
     for(auto it = v.begin(); it != v.end();it++){
         cout<<*(it)<<" ";
         
         
     // using for each loop to print vector 
     
     
     for(auto it = v){the 
         cout<< it<<" ";
//-----------------------------------------------Deleting the elements of vector------------------------------------------------------\

//{10,20,30}
v.erase(v.begin()+1);

//to print multiples elements
//[start,end)
v.erase(v.begin()+2,v.begin()+4);
}

//-----------------------------------------------Inserting element in vector--------------------------------------------------------

vector<int>v(2,100) //{100,100}
v.insert(v.begin(),300); // {300,100,100}
v.insert(v.begin()+1,2,10); //{300,10,10,100,100,}


vector<int>copy(2,50); //{50,50}

v.insert(v.begin(),copy begin(),copy.end());//{50,50,300,10,10,100,100}

///////////////size of vector//////////////
//{10,20}
cout<<v.size(); //2

v.pop_back(); // {10}

// v1 = {1,2}
//v2 = {3,4}

v1.swap(v2);

v1.clear(); ///clear the vector 
cout<<v.empty(); // check if the vector is empty true = if empty ,fale = non empty









_










     
     
     
     
     
     
     
     
     
 }
